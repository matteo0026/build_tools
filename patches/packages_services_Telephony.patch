From de070639d38e4e11ad2c810c3e50965feea1a017 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Fri, 20 Feb 2015 20:26:52 +0700
Subject: [PATCH 1/2] Telephony: HACK: enable WCDMA only setting

Samsung stock allows WCDMA only

Change-Id: If552c6439f7b6910422ec5549e54e68da798c82e
---
 res/values/strings.xml                           |  8 +++++---
 src/com/android/phone/MobileNetworkSettings.java | 15 +++++++++++++--
 2 files changed, 18 insertions(+), 5 deletions(-)

diff --git a/res/values/strings.xml b/res/values/strings.xml
index 4ec4453..1aae3a5 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -701,12 +701,14 @@
     </string-array>
 
     <string-array name="enabled_networks_except_lte_choices" translatable="false">
-        <item>@string/network_3G</item>
-        <item>@string/network_2G</item>
+        <item>@string/preferred_network_mode_wcdma_only_choice</item>
+        <item>@string/preferred_network_mode_gsm_only_choice</item>
+        <item>@string/preferred_network_mode_gsm_wcdma_preferred_choice</item>
     </string-array>
     <string-array name="enabled_networks_except_lte_values" translatable="false">
-        <item>"0"</item>
+        <item>"2"</item>
         <item>"1"</item>
+        <item>"0"</item>
     </string-array>
 
     <string-array name="enabled_networks_except_gsm_lte_choices" translatable="false">
diff --git a/src/com/android/phone/MobileNetworkSettings.java b/src/com/android/phone/MobileNetworkSettings.java
index 58aeeb4..16c1780 100644
--- a/src/com/android/phone/MobileNetworkSettings.java
+++ b/src/com/android/phone/MobileNetworkSettings.java
@@ -922,6 +922,7 @@ public class MobileNetworkSettings extends PreferenceActivity
             switch (buttonNetworkMode) {
                 case Phone.NT_MODE_WCDMA_PREF:
                 case Phone.NT_MODE_GSM_ONLY:
+                case Phone.NT_MODE_WCDMA_ONLY:
                 case Phone.NT_MODE_LTE_GSM_WCDMA:
                 case Phone.NT_MODE_LTE_CDMA_EVDO_GSM_WCDMA:
                 case Phone.NT_MODE_CDMA:
@@ -1152,12 +1152,22 @@ public class MobileNetworkSettings extends PreferenceActivity
                 mButtonEnabledNetworks.setSummary(R.string.network_3G);
                 break;
             case Phone.NT_MODE_WCDMA_ONLY:
+                if (!mIsGlobalCdma) {
+                    mButtonEnabledNetworks.setValue(
+                            Integer.toString(Phone.NT_MODE_WCDMA_ONLY));
+                    mButtonEnabledNetworks.setSummary(R.string.preferred_network_mode_wcdma_only_choice);
+                } else {
+                    mButtonEnabledNetworks.setValue(
+                            Integer.toString(Phone.NT_MODE_LTE_CDMA_EVDO_GSM_WCDMA));
+                    mButtonEnabledNetworks.setSummary(R.string.network_global);
+                }
+                break;
             case Phone.NT_MODE_GSM_UMTS:
             case Phone.NT_MODE_WCDMA_PREF:
                 if (!mIsGlobalCdma) {
                     mButtonEnabledNetworks.setValue(
                             Integer.toString(Phone.NT_MODE_WCDMA_PREF));
-                    mButtonEnabledNetworks.setSummary(R.string.network_3G);
+                    mButtonEnabledNetworks.setSummary(R.string.preferred_network_mode_gsm_wcdma_preferred_choice);
                 } else {
                     mButtonEnabledNetworks.setValue(
                             Integer.toString(Phone.NT_MODE_LTE_CDMA_EVDO_GSM_WCDMA));
@@ -1088,7 +1099,7 @@ public class MobileNetworkSettings extends PreferenceActivity
                 if (!mIsGlobalCdma) {
                     mButtonEnabledNetworks.setValue(
                             Integer.toString(Phone.NT_MODE_GSM_ONLY));
-                    mButtonEnabledNetworks.setSummary(R.string.network_2G);
+                    mButtonEnabledNetworks.setSummary(R.string.preferred_network_mode_gsm_only_choice);
                 } else {
                     mButtonEnabledNetworks.setValue(
                             Integer.toString(Phone.NT_MODE_LTE_CDMA_EVDO_GSM_WCDMA));
-- 
2.7.4


From 46796caffd91d0aa0bb5ae477f513a8a81e371b0 Mon Sep 17 00:00:00 2001
From: Pawit Pornkitprasan <p.pawit@gmail.com>
Date: Mon, 28 Dec 2015 19:37:32 +0700
Subject: [PATCH 2/2] On create, values need to be read from the RIL, not set

This causes problem on dual SIM phones where setting one SIM to
3G would cause the RIL to automatically change the other RIL to
2G.

In this case, when the setting saved is 3G for both SIM, whenever
the user switches tab, the tab the user switches to become 3G.
For example, when the user switches to Sim 2, Sim 2 becomes 3G.
And when the user switches back to Sim 1, Sim 1 becomes 3G. This
can be very confusing, not to mention that switching between
tabs should not cause the network mode to change.

The updateBody() call is removed to ensure that when SET is called,
the value is not immediately GET from the RIL as the RIL might not
finish updating the value yet and GET will return the old value,
resulting in the following behavior:

- User is on 2G
- User switches to 3G
- UI still displays "2G" due to updating value from RIL
- After a few seconds, UI displays "3G" because RIL update is
  finished.

Not sure what the call is for, but it's probably not used in GSM
phones. Care should be taken if this patch is to be applied to
other phones.
---
 src/com/android/phone/MobileNetworkSettings.java | 29 +++++++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)

diff --git a/src/com/android/phone/MobileNetworkSettings.java b/src/com/android/phone/MobileNetworkSettings.java
index 16c1780..3c1826f 100644
--- a/src/com/android/phone/MobileNetworkSettings.java
+++ b/src/com/android/phone/MobileNetworkSettings.java
@@ -765,6 +765,8 @@ public class MobileNetworkSettings extends PreferenceActivity
         mButtonPreferredNetworkMode.setValue(Integer.toString(settingsNetworkMode));
         UpdatePreferredNetworkModeSummary(settingsNetworkMode);
         UpdateEnabledNetworksValueAndSummary(settingsNetworkMode);
+        // Display preferred network type based on what modem returns b/18676277
+        mPhone.getPreferredNetworkType(mHandler.obtainMessage(MyHandler.MESSAGE_GET_PREFERRED_NETWORK_TYPE));
 
         /**
          * Enable/disable depending upon if there are any active subscriptions.
@@ -880,7 +882,6 @@ public class MobileNetworkSettings extends PreferenceActivity
             return true;
         }
 
-        updateBody();
         // always let the preference setting proceed.
         return true;
     }
@@ -888,6 +889,7 @@ public class MobileNetworkSettings extends PreferenceActivity
     private class MyHandler extends Handler {
 
         static final int MESSAGE_SET_PREFERRED_NETWORK_TYPE = 0;
+        static final int MESSAGE_GET_PREFERRED_NETWORK_TYPE = 1;
 
         @Override
         public void handleMessage(Message msg) {
@@ -895,6 +897,9 @@ public class MobileNetworkSettings extends PreferenceActivity
                 case MESSAGE_SET_PREFERRED_NETWORK_TYPE:
                     handleSetPreferredNetworkTypeResponse(msg);
                     break;
+                case MESSAGE_GET_PREFERRED_NETWORK_TYPE:
+                    handleGetPreferredNetworkTypeResponse(msg);
+                    break;
             }
         }
 
@@ -926,6 +931,28 @@ public class MobileNetworkSettings extends PreferenceActivity
                 }
             }
         }
+
+        private void handleGetPreferredNetworkTypeResponse(Message msg) {
+            AsyncResult ar = (AsyncResult) msg.obj;
+            final int phoneSubId = mPhone.getSubId();
+
+            if (ar.exception == null) {
+                int networkMode = ((int[]) ar.result)[0];
+
+                // Store this in setting so onPreferenceChange would trigger even if
+                // network mode from modem does not equal saved network mode
+                android.provider.Settings.Global.putInt(mPhone.getContext().getContentResolver(),
+                        android.provider.Settings.Global.PREFERRED_NETWORK_MODE + phoneSubId,
+                        networkMode );
+
+                UpdatePreferredNetworkModeSummary(networkMode);
+                UpdateEnabledNetworksValueAndSummary(networkMode);
+            } else {
+                if (DBG) {
+                    log("handleGetPreferredNetworkTypeResponse: exception in geting network mode.");
+                }
+            }
+        }
     }
 
     private void updatePreferredNetworkUIFromDb() {
-- 
2.7.4

